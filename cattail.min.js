export class CattailAudio{audioElement;audioContext=new AudioContext;player;clips=new Array;constructor(t){this.audioElement=t,this.player=this.audioContext.createMediaElementSource(this.audioElement),this.player.connect(this.audioContext.destination)}loadSound(t,e){let s=new AudioClip(t,e,this);return this.clips.push(s),s}async resumeAllSound(){this.clips.forEach((t=>{t.resume()}))}}class AudioClip{clipUrl;element;context;loadSuspension=!1;constructor(t,e,s){this.clipUrl=t,this.element=document.createElement("audio"),this.element.src=this.clipUrl,this.element.autoplay=!0,this.element.loop=e,document.body.append(this.element),this.context=s}play(){"suspended"!=this.context.audioContext.state?this.element.play():this.loadSuspension=!0}pause(){this.element.pause()}async resume(){await this.context.audioContext.resume(),this.loadSuspension&&(this.element.play(),this.loadSuspension=!1)}}export class Vector2{x;y;static zero=new Vector2(0,0);static up=new Vector2(0,1);static down=new Vector2(0,-1);static left=new Vector2(-1,0);static right=new Vector2(1,0);constructor(t,e){this.x=t,this.y=e}}export class Vector3{x;y;z;static zero=new Vector3(0,0,0);static up=new Vector3(0,1,0);static down=new Vector3(0,-1,0);static left=new Vector3(-1,0,0);static right=new Vector3(1,0,0);static forward=new Vector3(0,0,1);static back=new Vector3(0,0,-1);constructor(t,e,s){this.x=t,this.y=e,this.z=s}}export class Colour{colour;alpha;static red=new Colour(255,0,0);static green=new Colour(0,255,0);static blue=new Colour(0,0,255);static black=new Colour(0,0,0);static white=new Colour(255,255,255);constructor(t,e,s,i=1){this.colour=new Vector3(t,e,s),this.alpha=i}asCSSColour(){return`rgba(${this.colour.x},${this.colour.y},${this.colour.z},${this.alpha})`}}export class DrawList{static drawList=[]}export class Sprite{position;size;drawable;image;constructor(t,e,s,i){this.position=t,this.size=e,s&&(this.drawable=s),i&&(this.image=new CattailImage(this.position,this.size,Colour.white,i))}move(t){this.drawable&&this.drawable.points.forEach((e=>{e.x+=t.x,e.y+=t.y})),this.image&&(this.image.position=this.position)}addToDrawList(){DrawList.drawList.push(this)}}export class Drawable{points;colour;fill=!1;constructor(t=Colour.red,...e){this.points=e,this.colour=t}}export class Rectangle extends Drawable{constructor(t,e,s=Colour.red){super(s,t,new Vector2(t.x+e.x,t.y),new Vector2(t.x+e.x,t.y+e.y),new Vector2(t.x,t.y+e.y))}}export class CattailImage{position;size;image;colour;constructor(t,e,s=Colour.white,i){this.position=t,this.size=e,this.colour=s;let o=new Image(e.x,e.y);o.src=i,this.image=o}}export class Graphics{context;constructor(t){this.context=t}draw(){}drawFromList(){this.context.clearRect(0,0,this.context.canvas.width,this.context.canvas.height),DrawList.drawList.forEach((t=>{let e=this.context;if(t.drawable){let s=t.drawable;e.beginPath(),s.points.forEach((t=>{e.lineTo(t.x,t.y)})),e.stroke(),s.fill?(e.fillStyle=s.colour.asCSSColour(),e.fill()):e.closePath()}if(t.image){let s=t.image;e.drawImage(s.image,s.position.x,s.position.y,s.size.x,s.size.y)}removeItem(DrawList.drawList,t)}))}}function removeItem(t,e){const s=t.indexOf(e);return s>-1&&t.splice(s,1),t}export class Game{canvas;audioElement;context;graphicsContext;audio;entites;fps=1e3/60;currentLoop;static deltaTime=0;constructor(t,e){this.canvas=document.createElement("canvas"),this.audioElement=document.createElement("audio"),this.audioElement.autoplay=!0,this.audioElement.innerText="Unable to start audio until webpage is clicked or interacted with.",this.canvas.width=t.x,this.canvas.height=t.y,this.canvas.style.width="100%",this.canvas.style.height="100%",this.canvas.style.position="fixed",this.canvas.style.backgroundColor=e.asCSSColour(),this.context=this.canvas.getContext("2d"),document.body.append(this.canvas),document.body.append(this.audioElement),this.graphicsContext=new Graphics(this.context),this.audio=new CattailAudio(this.audioElement),this.entites=[]}addEntity(t){this.entites.push(t),t.active&&t.load()}run(){this.getUserGesture(),this.entites.forEach((t=>{t.active&&t.load()}));let t=0,e=s=>{Game.deltaTime=(s-t)/this.fps,t=s,this.entites.forEach((t=>{t.update()})),this.graphicsContext.drawFromList(),window.requestAnimationFrame(e)};window.requestAnimationFrame(e)}async getUserGesture(){try{const t=await waitForUserGesture();console.log("User clicked:",t),this.audio.resumeAllSound()}catch(t){console.error("Error while waiting for user gesture:",t)}}}export class Component{gameObject;load(...t){}update(...t){}}export class SpriteData{spr;move(t){this.spr.position.x+=t.x,this.spr.position.y+=t.y,this.spr.move(t)}}export class GameObject{sprite;components=[];active=!0;scale=new Vector2(1,1);constructor(t,e){this.sprite=new SpriteData,console.log(this.sprite),e&&(this.scale=e),t&&(this.sprite.spr=t,e&&this.sprite.spr.drawable&&this.sprite.spr.drawable.points.forEach((t=>{t.x*=this.scale.x,t.y*=this.scale.y})))}prepareDraw(){this.sprite.spr.addToDrawList()}addComponent(t){this.components.push(t)}load(){this.components.forEach((t=>{t.gameObject=this})),this.components.forEach((t=>{t.load()}))}update(...t){this.prepareDraw(),this.components.forEach((t=>{t.update()}))}}function waitForUserGesture(){return new Promise((t=>{function e(s){document.removeEventListener("change",e),document.removeEventListener("click",e),document.removeEventListener("contextmenu",e),document.removeEventListener("dblclick",e),document.removeEventListener("mouseup",e),document.removeEventListener("pointerup",e),document.removeEventListener("reset",e),document.removeEventListener("submit",e),document.removeEventListener("touchend",e),t(s)}document.addEventListener("change",e),document.addEventListener("click",e),document.addEventListener("contextmenu",e),document.addEventListener("dblclick",e),document.addEventListener("mouseup",e),document.addEventListener("pointerup",e),document.addEventListener("reset",e),document.addEventListener("submit",e),document.addEventListener("touchend",e)}))}